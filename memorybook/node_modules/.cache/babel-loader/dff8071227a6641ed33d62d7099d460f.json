{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Ivan Petrov\\\\Desktop\\\\React-MemoryBook\\\\memorybook\\\\src\\\\components\\\\Latest.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from 'react';\nimport { collection, getDocs } from 'firebase/firestore';\nimport { db } from '../firebase';\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa';\nimport LatestMemory from '../components/LatestMemory.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Latest = _ref => {\n  _s();\n\n  let {\n    slides\n  } = _ref;\n  const [memories, setMemories] = useState([]);\n  const memoriesRef = collection(db, \"Memories\");\n  useEffect(() => {\n    const getMemories = async () => {\n      const data = await getDocs(memoriesRef);\n      setMemories(data.docs.map(doc => ({ ...doc.data(),\n        id: doc.id\n      })));\n    };\n\n    getMemories();\n  }, []);\n  const [current, setCurrent] = useState(0);\n  const length = slides.length;\n\n  const nextSlide = () => {\n    setCurrent(current === length - 1 ? 0 : current + 1);\n  };\n\n  const prevSlide = () => {\n    setCurrent(current === 0 ? length - 1 : current - 1);\n  };\n\n  if (!Array.isArray(slides) || slides.length <= 0) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: \"slider\",\n    children: [/*#__PURE__*/_jsxDEV(FaArrowAltCircleLeft, {\n      className: \"left-arrow\",\n      onClick: prevSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 8\n    }, this), /*#__PURE__*/_jsxDEV(FaArrowAltCircleRight, {\n      className: \"right-arrow\",\n      onClick: nextSlide\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 9\n    }, this), memories.map((memory, index) => {\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: index === current ? 'slide active' : 'slide',\n        children: index === current && /*#__PURE__*/_jsxDEV(LatestMemory, {\n          memory: memory\n        }, memory.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 7\n  }, this)\n  /*\r\n        <section className=\"Latest\">\r\n          <h1>Latest Memories</h1>              \r\n          <article className=\"Latest-Items\">\r\n            <ul className=\"Latest-Items-List\">    \r\n              {memories.map(memory => {\r\n                return <LatestMemory key={memory.id} memory = {memory}/>\r\n              })} \r\n            </ul>\r\n          </article>\r\n        </section>*/\n  ;\n};\n\n_s(Latest, \"tZx/2lfSoQ6C6Vzz42sNEjeA0Iw=\");\n\n_c = Latest;\nexport default Latest;\n\nvar _c;\n\n$RefreshReg$(_c, \"Latest\");","map":{"version":3,"sources":["C:/Users/Ivan Petrov/Desktop/React-MemoryBook/memorybook/src/components/Latest.js"],"names":["useState","useEffect","collection","getDocs","db","FaArrowAltCircleRight","FaArrowAltCircleLeft","LatestMemory","Latest","slides","memories","setMemories","memoriesRef","getMemories","data","docs","map","doc","id","current","setCurrent","length","nextSlide","prevSlide","Array","isArray","memory","index"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,SAASC,UAAT,EAAqBC,OAArB,QAAoC,oBAApC;AACA,SAASC,EAAT,QAAmB,aAAnB;AAEA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,gBAA5D;AACA,OAAOC,YAAP,MAAyB,+BAAzB;;;AAIA,MAAMC,MAAM,GAAG,QAAgB;AAAA;;AAAA,MAAf;AAAEC,IAAAA;AAAF,GAAe;AAC7B,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0BX,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAMY,WAAW,GAAGV,UAAU,CAACE,EAAD,EAAK,UAAL,CAA9B;AAEAH,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMY,WAAW,GAAG,YAAW;AAC7B,YAAMC,IAAI,GAAG,MAAMX,OAAO,CAACS,WAAD,CAA1B;AACAD,MAAAA,WAAW,CAACG,IAAI,CAACC,IAAL,CAAUC,GAAV,CAAeC,GAAD,KAAU,EAAC,GAAGA,GAAG,CAACH,IAAJ,EAAJ;AAAgBI,QAAAA,EAAE,EAAED,GAAG,CAACC;AAAxB,OAAV,CAAd,CAAD,CAAX;AACD,KAHD;;AAKAL,IAAAA,WAAW;AACZ,GAPQ,EAON,EAPM,CAAT;AASE,QAAM,CAACM,OAAD,EAAUC,UAAV,IAAwBpB,QAAQ,CAAC,CAAD,CAAtC;AACA,QAAMqB,MAAM,GAAGZ,MAAM,CAACY,MAAtB;;AAEA,QAAMC,SAAS,GAAG,MAAM;AACtBF,IAAAA,UAAU,CAACD,OAAO,KAAKE,MAAM,GAAG,CAArB,GAAyB,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;AACD,GAFD;;AAIA,QAAMI,SAAS,GAAG,MAAM;AACtBH,IAAAA,UAAU,CAACD,OAAO,KAAK,CAAZ,GAAgBE,MAAM,GAAG,CAAzB,GAA6BF,OAAO,GAAG,CAAxC,CAAV;AACD,GAFD;;AAIA,MAAI,CAACK,KAAK,CAACC,OAAN,CAAchB,MAAd,CAAD,IAA0BA,MAAM,CAACY,MAAP,IAAiB,CAA/C,EAAkD;AAChD,WAAO,IAAP;AACD;;AAED,sBACE;AAAS,IAAA,SAAS,EAAC,QAAnB;AAAA,4BACC,QAAC,oBAAD;AAAsB,MAAA,SAAS,EAAC,YAAhC;AAA6C,MAAA,OAAO,EAAEE;AAAtD;AAAA;AAAA;AAAA;AAAA,YADD,eAEE,QAAC,qBAAD;AAAuB,MAAA,SAAS,EAAC,aAAjC;AAA+C,MAAA,OAAO,EAAED;AAAxD;AAAA;AAAA;AAAA;AAAA,YAFF,EAGKZ,QAAQ,CAACM,GAAT,CAAa,CAACU,MAAD,EAASC,KAAT,KAAmB;AAC/B,0BACF;AACE,QAAA,SAAS,EAAEA,KAAK,KAAKR,OAAV,GAAoB,cAApB,GAAqC,OADlD;AAAA,kBAIGQ,KAAK,KAAKR,OAAV,iBACC,QAAC,YAAD;AAA8B,UAAA,MAAM,EAAIO;AAAxC,WAAmBA,MAAM,CAACR,EAA1B;AAAA;AAAA;AAAA;AAAA;AALJ,SAEOS,KAFP;AAAA;AAAA;AAAA;AAAA,cADE;AAUL,KAXI,CAHL;AAAA;AAAA;AAAA;AAAA;AAAA;AAgBN;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AA3BI;AA+BH,CA3DD;;GAAMnB,M;;KAAAA,M;AA6DN,eAAeA,MAAf","sourcesContent":["import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport LatestMemory from '../components/LatestMemory.js';\r\n\r\n\r\n\r\nconst Latest = ({ slides }) => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = slides.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(slides) || slides.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className='slider'>\r\n       <FaArrowAltCircleLeft className='left-arrow' onClick={prevSlide} />\r\n        <FaArrowAltCircleRight className='right-arrow' onClick={nextSlide} />\r\n          {memories.map((memory, index) => {\r\n            return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n              <LatestMemory key={memory.id} memory = {memory}/>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n    </section>\r\n/*\r\n      <section className=\"Latest\">\r\n        <h1>Latest Memories</h1>              \r\n        <article className=\"Latest-Items\">\r\n          <ul className=\"Latest-Items-List\">    \r\n            {memories.map(memory => {\r\n              return <LatestMemory key={memory.id} memory = {memory}/>\r\n            })} \r\n          </ul>\r\n        </article>\r\n      </section>*/\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Latest;\r\n"]},"metadata":{},"sourceType":"module"}