[{"C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\index.js":"1","C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\App.js":"2","C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\reportWebVitals.js":"3","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js":"4","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js":"5","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js":"6","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js":"7","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js":"8","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js":"9","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js":"10","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\LatestMemory.js":"11","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js":"12","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js":"13"},{"size":500,"mtime":1636697518764,"results":"14","hashOfConfig":"15"},{"size":577,"mtime":1636697508430,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":478,"mtime":1636813720156,"results":"18","hashOfConfig":"19"},{"size":918,"mtime":1637238455469,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":499162500000,"results":"21","hashOfConfig":"19"},{"size":1130,"mtime":1637238400901,"results":"22","hashOfConfig":"19"},{"size":211,"mtime":1637369500852,"results":"23","hashOfConfig":"19"},{"size":1792,"mtime":1637199225332,"results":"24","hashOfConfig":"19"},{"size":529,"mtime":1637016053996,"results":"25","hashOfConfig":"19"},{"size":474,"mtime":1637189472434,"results":"26","hashOfConfig":"19"},{"size":2776,"mtime":1637373476915,"results":"27","hashOfConfig":"19"},{"size":1780,"mtime":1637238444285,"results":"28","hashOfConfig":"19"},{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"19y5lwj",{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},"d181of",{"filePath":"38","messages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"37"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"37"},"C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\index.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\App.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\react-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js",[],["58","59"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js",["60","61"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport LatestMemory from '../components/LatestMemory.js';\r\n\r\n\r\n\r\nconst Latest = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Latest Memories </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n              <a href=\"\">\r\n                <LatestMemory key={memory.id} memory = {memory}/>\r\n              </a>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Latest;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\LatestMemory.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js",["62","63"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js",["64","65"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport LatestMemory from './LatestMemory.js';\r\n\r\n\r\n\r\nconst Memories = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Memory Book </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n              <a href=\"\">\r\n                <LatestMemory key={memory.id} memory = {memory}/>\r\n              </a>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Memories;\r\n",{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":21,"column":6,"nodeType":"72","endLine":21,"endColumn":8,"suggestions":"73"},{"ruleId":"74","severity":1,"message":"75","line":50,"column":15,"nodeType":"76","endLine":50,"endColumn":26},{"ruleId":"77","severity":1,"message":"78","line":42,"column":24,"nodeType":"79","messageId":"80","endLine":42,"endColumn":26},{"ruleId":"81","severity":1,"message":"82","line":63,"column":9,"nodeType":"83","messageId":"84","endLine":63,"endColumn":15},{"ruleId":"70","severity":1,"message":"71","line":21,"column":6,"nodeType":"72","endLine":21,"endColumn":8,"suggestions":"85"},{"ruleId":"74","severity":1,"message":"75","line":50,"column":15,"nodeType":"76","endLine":50,"endColumn":26},"no-native-reassign",["86"],"no-negated-in-lhs",["87"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memoriesRef'. Either include it or remove the dependency array.","ArrayExpression",["88"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'docRef' is assigned a value but never used.","Identifier","unusedVar",["89"],"no-global-assign","no-unsafe-negation",{"desc":"90","fix":"91"},{"desc":"90","fix":"92"},"Update the dependencies array to be: [memoriesRef]",{"range":"93","text":"94"},{"range":"95","text":"94"},[626,628],"[memoriesRef]",[616,618]]