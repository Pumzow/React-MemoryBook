[{"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js":"1","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js":"2","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js":"3","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js":"4","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js":"5","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js":"6","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js":"7","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js":"8","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\LatestMemory.js":"9","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js":"10"},{"size":572,"mtime":1637590348105,"results":"11","hashOfConfig":"12"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"12"},{"size":873,"mtime":1637592007604,"results":"14","hashOfConfig":"12"},{"size":1780,"mtime":1637238444285,"results":"15","hashOfConfig":"12"},{"size":1792,"mtime":1637199225332,"results":"16","hashOfConfig":"12"},{"size":959,"mtime":1637591967933,"results":"17","hashOfConfig":"12"},{"size":3041,"mtime":1637409657221,"results":"18","hashOfConfig":"12"},{"size":211,"mtime":1637369500852,"results":"19","hashOfConfig":"12"},{"size":474,"mtime":1637189472434,"results":"20","hashOfConfig":"12"},{"size":529,"mtime":1637016053996,"results":"21","hashOfConfig":"12"},{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17lz8wg",{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js",["46"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js",["47","48"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport LatestMemory from './LatestMemory.js';\r\n\r\n\r\n\r\nconst Memories = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Memory Book </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n              <a href=\"\">\r\n                <LatestMemory key={memory.id} memory = {memory}/>\r\n              </a>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Memories;\r\n",["49","50"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js",["51","52"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport LatestMemory from '../components/LatestMemory.js';\r\n\r\n\r\n\r\nconst Latest = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Latest Memories </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n              <a href=\"\">\r\n                <LatestMemory key={memory.id} memory = {memory}/>\r\n              </a>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Latest;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js",["53"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js",["54","55"],"import { collection, addDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nconst Book = () => {\r\n\r\n    return (\r\n      <section className=\"Share\">\r\n        <h1> Share Memory </h1>\r\n        <form id=\"Share-Form\">\r\n            <div className=\"container\">\r\n              <label htmlFor=\"leg-title\"> Title </label><br/>\r\n              <input id=\"Share-Form-Title\" type=\"text\" name=\"title\" placeholder=\"Enter memory title...\" /><br/>\r\n\r\n              <label htmlFor=\"category\"> Description </label><br/>\r\n              <textarea id=\"Share-Form-Description\" type=\"text\" name=\"description\" placeholder=\"Enter memory description...\" /><br/>\r\n\r\n              <label htmlFor=\"game-img\">Image URL </label><br/>\r\n              <input id=\"Share-Form-ImageURL\" type=\"text\" name=\"imageUrl\" placeholder=\"Upload a photo...\" onChange={ChangeMemoryPreviewImage}/><br/>\r\n\r\n              <input className=\"btn submit\" type=\"submit\" value=\"Share\" onClick={ShareMemory}/>\r\n            </div>\r\n            <div id=\"MemoryPreviewImage-parent\">\r\n              <img id=\"MemoryPreviewImage\" src=\"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\" alt=\"\"/>\r\n            </div>\r\n        </form>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nfunction ChangeMemoryPreviewImage(e){\r\n  e.preventDefault();\r\n\r\n  \r\n\r\n  const memoryPreviewImageRef = document.querySelector('#MemoryPreviewImage');\r\n  const imageUrlRef = document.querySelector('#Share-Form-ImageURL');\r\n  \r\n  memoryPreviewImageRef.src = imageUrlRef.value\r\n\r\n  fetch('imageUrlRef.value', {\r\n      method: 'HEAD'\r\n   })\r\n   .then(res => {\r\n      if (res.ok) {\r\n         console.log('Image exists.');\r\n      } else {\r\n         console.log('Image does not exist.');\r\n      }\r\n   }).catch(err => console.log('Error:', err));\r\n\r\n  if(imageUrlRef.value == \"\")\r\n  {\r\n    memoryPreviewImageRef.src = \"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\";\r\n  }\r\n\r\n}\r\n\r\nasync function ShareMemory(e){\r\n\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  const titleRef = document.querySelector('#Share-Form-Title');\r\n  const descriptionRef = document.querySelector('#Share-Form-Description');\r\n  const imageUrlRef = document.querySelector('#Share-Form-ImageURL');\r\n\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  const date = new Date();\r\n  const sharedDate = date.getDate() + \" \" + monthNames[date.getMonth()] + \" \" + date.getFullYear();\r\n\r\n  e.preventDefault();\r\n  const docRef = await addDoc(\r\n    memoriesRef, {\r\n      Title: titleRef.value,\r\n      Description: descriptionRef.value,\r\n      Date: sharedDate,\r\n      ImageURL: imageUrlRef.value,\r\n    }\r\n  )\r\n  .then(() =>{\r\n    alert(\"Data added successfully.\");\r\n  })\r\n  .catch((error) => {\r\n    alert(\"Unsuccessful operation, error: \" + error)\r\n  })\r\n}\r\n\r\nexport default Book;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\LatestMemory.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js",[],{"ruleId":"56","severity":1,"message":"57","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":18},{"ruleId":"60","severity":1,"message":"61","line":21,"column":6,"nodeType":"62","endLine":21,"endColumn":8,"suggestions":"63"},{"ruleId":"64","severity":1,"message":"65","line":50,"column":15,"nodeType":"66","endLine":50,"endColumn":26},{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"60","severity":1,"message":"61","line":21,"column":6,"nodeType":"62","endLine":21,"endColumn":8,"suggestions":"71"},{"ruleId":"64","severity":1,"message":"65","line":50,"column":15,"nodeType":"66","endLine":50,"endColumn":26},{"ruleId":"56","severity":1,"message":"72","line":1,"column":10,"nodeType":"58","messageId":"59","endLine":1,"endColumn":14},{"ruleId":"73","severity":1,"message":"74","line":53,"column":24,"nodeType":"75","messageId":"76","endLine":53,"endColumn":26},{"ruleId":"56","severity":1,"message":"77","line":74,"column":9,"nodeType":"58","messageId":"59","endLine":74,"endColumn":15},"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memoriesRef'. Either include it or remove the dependency array.","ArrayExpression",["78"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/jsx-eslint/eslint-plugin-jsx-a11y/blob/HEAD/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-native-reassign",["79"],"no-negated-in-lhs",["80"],["81"],"'Link' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'docRef' is assigned a value but never used.",{"desc":"82","fix":"83"},"no-global-assign","no-unsafe-negation",{"desc":"82","fix":"84"},"Update the dependencies array to be: [memoriesRef]",{"range":"85","text":"86"},{"range":"87","text":"86"},[616,618],"[memoriesRef]",[626,628]]