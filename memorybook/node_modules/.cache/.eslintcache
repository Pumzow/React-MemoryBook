[{"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js":"1","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js":"2","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js":"3","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js":"4","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js":"5","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js":"6","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js":"7","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js":"8","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js":"9","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memory.js":"10","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryDetailsItem.js":"11","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js":"12","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Edit.js":"13","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Register.js":"14","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Login.js":"15","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Policy.js":"16"},{"size":572,"mtime":1637590348105,"results":"17","hashOfConfig":"18"},{"size":362,"mtime":499162500000,"results":"19","hashOfConfig":"18"},{"size":1595,"mtime":1638485905193,"results":"20","hashOfConfig":"18"},{"size":2073,"mtime":1638490425047,"results":"21","hashOfConfig":"18"},{"size":1737,"mtime":1638490396989,"results":"22","hashOfConfig":"18"},{"size":2212,"mtime":1638544328134,"results":"23","hashOfConfig":"18"},{"size":3297,"mtime":1638223874162,"results":"24","hashOfConfig":"18"},{"size":337,"mtime":1638485795518,"results":"25","hashOfConfig":"18"},{"size":529,"mtime":1638062542365,"results":"26","hashOfConfig":"18"},{"size":1518,"mtime":1638223844448,"results":"27","hashOfConfig":"18"},{"size":679,"mtime":1637711019906,"results":"28","hashOfConfig":"18"},{"size":587,"mtime":1637702954263,"results":"29","hashOfConfig":"18"},{"size":2359,"mtime":1638477204324,"results":"30","hashOfConfig":"18"},{"size":6274,"mtime":1638542767111,"results":"31","hashOfConfig":"18"},{"size":2271,"mtime":1638499212488,"results":"32","hashOfConfig":"18"},{"size":85800,"mtime":1638485864534,"results":"33","hashOfConfig":"18"},{"filePath":"34","messages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"17lz8wg",{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"41","messages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"36"},{"filePath":"44","messages":"45","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"46","usedDeprecatedRules":"36"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"36"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"36"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"36"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"36"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"36"},{"filePath":"72","messages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"36"},"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js",[],["74","75"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js",["76","77"],"import { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\nimport { getAuth } from \"firebase/auth\";\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport MemoryItem from './Items/MemoryItem.js';\r\n\r\n\r\n\r\nconst Memories = () => {\r\n  const navigate = useNavigate();\r\n  const auth = getAuth();\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n    auth.onAuthStateChanged(setUser);\r\n  });\r\n\r\n  if (user === null) {\r\n    navigate(\"/Login\");\r\n  }\r\n\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () => {\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const length = memories.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  return (\r\n    <section className=\"Memories\">\r\n      <h1> Memory Book </h1>\r\n      {length > 0\r\n        ? <article className=\"Memories-Slider\">\r\n          <FaArrowAltCircleLeft className='Memories-Item-Previous' onClick={prevSlide} />\r\n          {memories.map((memory, index) => {\r\n            return (\r\n              <div\r\n                className={index === current ? 'slide active' : 'slide'}\r\n                key={index}\r\n              >\r\n                {index === current && (\r\n                  <MemoryItem key={memory.id} memory={memory} />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n\r\n          <FaArrowAltCircleRight className='Memories-Item-Next' onClick={nextSlide} />\r\n        </article>\r\n        : <p> Searching for memories... </p>\r\n      }\r\n    </section>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default Memories;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js",["78"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport MemoryItem from './Items/MemoryItem';\r\n\r\n\r\n\r\nconst Latest = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () => {\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const length = memories.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n\r\n  return (\r\n    <section className=\"Latest\">\r\n      <h1> Latest Memories </h1>\r\n      {length > 0\r\n        ? <article className=\"Latest-Slider\">\r\n          <FaArrowAltCircleLeft className='Latest-Item-Previous' onClick={prevSlide} />\r\n          {memories.map((memory, index) => {\r\n            return (\r\n              <div\r\n                className={index === current ? 'slide active' : 'slide'}\r\n                key={index}\r\n              >\r\n                {index === current && (\r\n                  <MemoryItem key={memory.id} memory={memory} />\r\n                )}\r\n              </div>\r\n            );\r\n          })}\r\n          <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide} />\r\n        </article>\r\n        : <p> Searching for memories... </p>\r\n      }\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default Latest;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js",["79"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js",["80","81"],"import { useState, useEffect} from 'react'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { db } from '../firebase';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { collection, addDoc } from 'firebase/firestore'\r\n\r\nconst Share = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const auth = getAuth();\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n      auth.onAuthStateChanged(setUser);\r\n  });\r\n\r\n  if(user === null)\r\n  {\r\n    navigate(\"/Login\");\r\n  }\r\n\r\n  const onShareHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    let formData = new FormData(e.currentTarget);\r\n    let { title, description, imageUrl } = Object.fromEntries(formData)\r\n\r\n    console.log(title, description, imageUrl);\r\n\r\n    const memoriesRef = collection(db, \"Memories\");\r\n\r\n    const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n    const date = new Date();\r\n    const sharedDate = date.getDate() + \" \" + monthNames[date.getMonth()] + \" \" + date.getFullYear();\r\n\r\n    const docRef = await addDoc(\r\n      memoriesRef, {\r\n      Title: title,\r\n      Description: description,\r\n      Date: sharedDate,\r\n      ImageURL: imageUrl,\r\n    }\r\n    )\r\n      .then(() => {\r\n        navigate(\"/Memories\");\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Unsuccessful operation, error: \" + error)\r\n      })\r\n  };\r\n\r\n  return (\r\n    <section className=\"Share\">\r\n      <h1> Share Memory </h1>\r\n      <form id=\"Share-Form\" onSubmit={onShareHandler}>\r\n        <div className=\"container\">\r\n          <label htmlFor=\"leg-title\"> Title </label><br />\r\n          <input id=\"Share-Form-Title\" type=\"text\" name=\"title\" placeholder=\"Enter memory title...\" /><br />\r\n\r\n          <label htmlFor=\"category\"> Description </label><br />\r\n          <textarea id=\"Share-Form-Description\" type=\"text\" name=\"description\" placeholder=\"Enter memory description...\" /><br />\r\n\r\n          <label htmlFor=\"game-img\">Image URL </label><br />\r\n          <input id=\"Share-Form-ImageURL\" type=\"text\" name=\"imageUrl\" placeholder=\"Upload a photo...\" onChange={ChangeMemoryPreviewImage} /><br />\r\n\r\n          <input className=\"btn submit\" type=\"submit\" value=\"Share\" />\r\n        </div>\r\n        <div id=\"MemoryPreviewImage-parent\">\r\n          <img id=\"MemoryPreviewImage\" src=\"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\" alt=\"\" />\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n\r\n\r\n};\r\n\r\n\r\n\r\nconst ChangeMemoryPreviewImage = (e) => {\r\n  e.preventDefault();\r\n\r\n  const memoryPreviewImageRef = document.querySelector('#MemoryPreviewImage');\r\n  const imageUrlRef = document.querySelector('#Share-Form-ImageURL');\r\n\r\n  fetch(imageUrlRef.value, {\r\n    method: 'HEAD'\r\n  })\r\n    .then(res => {\r\n      if (res.ok) {\r\n        console.log('Image exists.');\r\n        memoryPreviewImageRef.src = imageUrlRef.value\r\n      } else {\r\n        console.log('Image does not exist.');\r\n        memoryPreviewImageRef.src = \"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\";\r\n      }\r\n    }).catch(err => console.log('Error:', err));\r\n}\r\n\r\nexport default Share;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js",["82"],"import { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <p>Copyright © 2021 MemoryBook. All Rights Reserved. <NavLink to=\"Privacy-Policy\">Privacy Policy</NavLink></p>\r\n            \r\n        </footer>\r\n    );\r\n  }\r\n  \r\n  export default Footer;\r\n  ","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memory.js",["83"],"import { useState, useEffect } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebase';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { getDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport MemoryDetailsItem from './Items/MemoryDetailsItem.js';\r\n\r\n\r\n\r\nconst Memory = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const auth = getAuth();\r\n\r\n  const [user, setUser] = useState();\r\n\r\n  useEffect(() => {\r\n      auth.onAuthStateChanged(setUser);\r\n  });\r\n\r\n  if(user === null)\r\n  {\r\n    navigate(\"/Login\");\r\n  }\r\n  \r\n  const { memoryId } = useParams();\r\n\r\n  const [memory, setMemory] = useState({});\r\n\r\n  useEffect(() => {\r\n    const getMemory = async () => {\r\n      const docRef = doc(db, \"Memories\", memoryId);\r\n      const docSnap = await getDoc(docRef);\r\n      setMemory(docSnap.data());\r\n      console.log(docSnap.data());\r\n    }\r\n\r\n    getMemory();\r\n  }, [memoryId]);\r\n\r\n  const onDeleteHandler = async(e) =>{\r\n    e.preventDefault();\r\n\r\n    await deleteDoc(doc(db, \"Memories\", memoryId));\r\n\r\n    navigate(\"/Memories\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <article>\r\n        <MemoryDetailsItem key={memoryId} memory={memory} />\r\n      </article>\r\n      <article className=\"Memory-Interactions\">\r\n        <button> Like </button>\r\n        <button> <Link to={`/memory/edit/${memoryId}`} > Edit </Link> </button>\r\n        <button onClick={onDeleteHandler}>Delete</button>\r\n      </article>\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Memory;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryDetailsItem.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Edit.js",["84"],"import { useState, useEffect } from 'react';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { db } from '../firebase';\r\nimport { getAuth } from \"firebase/auth\";\r\nimport { updateDoc, doc, getDoc } from 'firebase/firestore'\r\n\r\nconst Edit = () => {\r\n    const navigate = useNavigate();\r\n  \r\n    const auth = getAuth();\r\n  \r\n    const [user, setUser] = useState();\r\n  \r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(setUser);\r\n    });\r\n  \r\n    if(user === null)\r\n    {\r\n      navigate(\"/Login\");\r\n    }\r\n\r\n    const { memoryId } = useParams();\r\n\r\n    const [memory, setMemory] = useState({});\r\n\r\n    useEffect(() => {\r\n        const getMemory = async () => {\r\n            const docRef = doc(db, \"Memories\", memoryId);\r\n            const docSnap = await getDoc(docRef);\r\n            setMemory(docSnap.data());\r\n            console.log(docSnap.data());\r\n        }\r\n\r\n        getMemory();\r\n    }, [memoryId]);\r\n\r\n    const onEditHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let formData = new FormData(e.currentTarget);\r\n        let { title, description } = Object.fromEntries(formData)\r\n\r\n        const memoryRef = doc(db, \"Memories\", memoryId);\r\n\r\n        await updateDoc(memoryRef, {\r\n            Title: title,\r\n            Description: description\r\n        });\r\n\r\n        navigate('/Memories')\r\n    };\r\n\r\n    return (\r\n        <section className=\"Edit\">\r\n            <h1> Edit Memory </h1>\r\n            <form id=\"Edit-Form\" onSubmit={onEditHandler}>\r\n                <div className=\"container\">\r\n                    <label htmlFor=\"leg-title\"> Title </label><br />\r\n                    <input id=\"Edit-Form-Title\" type=\"text\" name=\"title\" placeholder=\"Enter memory title...\" defaultValue={memory.Title} /><br />\r\n\r\n                    <label htmlFor=\"category\"> Description </label><br />\r\n                    <textarea id=\"Edit-Form-Description\" type=\"text\" name=\"description\" placeholder=\"Enter memory description...\" defaultValue={memory.Description} /><br />\r\n\r\n                    <input className=\"btn submit\" type=\"submit\" value=\"Save\" />\r\n                </div>\r\n                <div id=\"MemoryPreviewImage-parent\">\r\n                    <img id=\"MemoryPreviewImage\" src={memory.ImageURL} alt=\"\" />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Register.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Login.js",["85","86","87","88","89","90"],"import { collection, addDoc } from 'firebase/firestore'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { db } from '../firebase';\r\nimport { getAuth, signInWithEmailAndPassword } from \"firebase/auth\";\r\nimport { useState, useEffect } from 'react';\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const auth = getAuth();\r\n\r\n    const [user, setUser] = useState();\r\n    const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n\r\n    useEffect(() => {\r\n        auth.onAuthStateChanged(setUser);\r\n    });\r\n\r\n    if (user !== null) {\r\n        navigate(\"/Memories\");\r\n    }\r\n\r\n    const onLoginHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let formData = new FormData(e.currentTarget);\r\n        let { email, password } = Object.fromEntries(formData)\r\n\r\n\r\n\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                //navigate(\"/Memories\");\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n\r\n                console.log(errorCode);\r\n\r\n                if (errorCode === \"auth/invalid-email\" || \"auth/wrong-password\") {\r\n                    setInvalidCredentials(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"Login\">\r\n            <h1> Login User </h1>\r\n            <form id=\"Login-Form\" onSubmit={onLoginHandler}>\r\n                <div className=\"container\"\r\n                >\r\n                    {invalidCredentials ? <p className=\"InvalidField\"> Invalid Credentials</p> : <></>}\r\n\r\n                    <label htmlFor=\"leg-title\"> E-mail </label><br />\r\n                    <input id=\"Login-Form-Email\" type=\"text\" name=\"email\" placeholder=\"Enter e-mail...\" /><br />\r\n\r\n                    <label htmlFor=\"category\"> Password </label><br />\r\n                    <input id=\"Login-Form-Password\" type=\"password\" name=\"password\" placeholder=\"Enter password...\" /><br />\r\n\r\n                    <input className=\"btn submit\" type=\"submit\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Policy.js",[],{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","replacedBy":"94"},{"ruleId":"95","severity":1,"message":"96","line":18,"column":3,"nodeType":"97","endLine":18,"endColumn":12,"suggestions":"98"},{"ruleId":"95","severity":1,"message":"99","line":36,"column":6,"nodeType":"100","endLine":36,"endColumn":8,"suggestions":"101"},{"ruleId":"95","severity":1,"message":"99","line":21,"column":6,"nodeType":"100","endLine":21,"endColumn":8,"suggestions":"102"},{"ruleId":"95","severity":1,"message":"96","line":11,"column":5,"nodeType":"97","endLine":11,"endColumn":14,"suggestions":"103"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":3,"nodeType":"97","endLine":14,"endColumn":12,"suggestions":"104"},{"ruleId":"105","severity":1,"message":"106","line":38,"column":11,"nodeType":"97","messageId":"107","endLine":38,"endColumn":17},{"ruleId":"105","severity":1,"message":"108","line":1,"column":19,"nodeType":"97","messageId":"107","endLine":1,"endColumn":30},{"ruleId":"95","severity":1,"message":"96","line":17,"column":3,"nodeType":"97","endLine":17,"endColumn":12,"suggestions":"109"},{"ruleId":"95","severity":1,"message":"96","line":14,"column":5,"nodeType":"97","endLine":14,"endColumn":14,"suggestions":"110"},{"ruleId":"105","severity":1,"message":"111","line":1,"column":10,"nodeType":"97","messageId":"107","endLine":1,"endColumn":20},{"ruleId":"105","severity":1,"message":"112","line":1,"column":22,"nodeType":"97","messageId":"107","endLine":1,"endColumn":28},{"ruleId":"105","severity":1,"message":"113","line":3,"column":10,"nodeType":"97","messageId":"107","endLine":3,"endColumn":12},{"ruleId":"95","severity":1,"message":"96","line":15,"column":5,"nodeType":"97","endLine":15,"endColumn":14,"suggestions":"114"},{"ruleId":"105","severity":1,"message":"115","line":33,"column":23,"nodeType":"97","messageId":"107","endLine":33,"endColumn":27},{"ruleId":"105","severity":1,"message":"116","line":38,"column":23,"nodeType":"97","messageId":"107","endLine":38,"endColumn":35},"no-native-reassign",["117"],"no-negated-in-lhs",["118"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setUser'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [auth] as a second argument to the useEffect Hook.","Identifier",["119"],"React Hook useEffect has a missing dependency: 'memoriesRef'. Either include it or remove the dependency array.","ArrayExpression",["120"],["121"],["122"],["123"],"no-unused-vars","'docRef' is assigned a value but never used.","unusedVar","'useNavigate' is defined but never used.",["124"],["125"],"'collection' is defined but never used.","'addDoc' is defined but never used.","'db' is defined but never used.",["126"],"'user' is assigned a value but never used.","'errorMessage' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"127","fix":"128"},{"desc":"129","fix":"130"},{"desc":"129","fix":"131"},{"desc":"127","fix":"132"},{"desc":"127","fix":"133"},{"desc":"127","fix":"134"},{"desc":"127","fix":"135"},{"desc":"127","fix":"136"},"Add dependencies array: [auth]",{"range":"137","text":"138"},"Update the dependencies array to be: [memoriesRef]",{"range":"139","text":"140"},{"range":"141","text":"140"},{"range":"142","text":"138"},{"range":"143","text":"138"},{"range":"144","text":"138"},{"range":"145","text":"138"},{"range":"146","text":"138"},[559,559],", [auth]",[942,944],"[memoriesRef]",[616,618],[370,370],[423,423],[515,515],[458,458],[539,539]]