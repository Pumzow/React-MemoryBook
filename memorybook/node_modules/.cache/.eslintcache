[{"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js":"1","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js":"2","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js":"3","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js":"4","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js":"5","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js":"6","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js":"7","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js":"8","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js":"9","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memory.js":"10","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryDetailsItem.js":"11","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js":"12"},{"size":572,"mtime":1637590348105,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":499162500000,"results":"15","hashOfConfig":"14"},{"size":982,"mtime":1637703619996,"results":"16","hashOfConfig":"14"},{"size":1733,"mtime":1637703043024,"results":"17","hashOfConfig":"14"},{"size":1730,"mtime":1637703015515,"results":"18","hashOfConfig":"14"},{"size":953,"mtime":1637593318344,"results":"19","hashOfConfig":"14"},{"size":3055,"mtime":1637702965906,"results":"20","hashOfConfig":"14"},{"size":211,"mtime":1637369500852,"results":"21","hashOfConfig":"14"},{"size":529,"mtime":1637016053996,"results":"22","hashOfConfig":"14"},{"size":1082,"mtime":1637711104319,"results":"23","hashOfConfig":"14"},{"size":679,"mtime":1637711019906,"results":"24","hashOfConfig":"14"},{"size":587,"mtime":1637702954263,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17lz8wg",{"filePath":"29","messages":"30","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"33","messages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"28"},{"filePath":"36","messages":"37","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"38","usedDeprecatedRules":"28"},{"filePath":"39","messages":"40","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"28"},{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js",[],["55","56"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories.js",["57"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport MemoryItem from './Items/MemoryItem.js';\r\n\r\n\r\n\r\nconst Memories = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Memory Book </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n                <MemoryItem key={memory.id} memory = {memory}/>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Memories;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Latest.js",["58"],"import { useState, useEffect } from 'react';\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\n\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\nimport MemoryItem from './MemoryItem.js';\r\n\r\n\r\n\r\nconst Latest = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () =>{\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({...doc.data(), id: doc.id})));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n    const [current, setCurrent] = useState(0);\r\n    const length = memories.length;\r\n\r\n    const nextSlide = () => {\r\n      setCurrent(current === length - 1 ? 0 : current + 1);\r\n    };\r\n\r\n    const prevSlide = () => {\r\n      setCurrent(current === 0 ? length - 1 : current - 1);\r\n    };\r\n\r\n    if (!Array.isArray(memories) || memories.length <= 0) {\r\n      return null;\r\n    }\r\n\r\n    return (\r\n      <section className=\"Latest\">\r\n        <h1> Latest Memories </h1>\r\n        <article className=\"Latest-Slider\">\r\n        <FaArrowAltCircleLeft  className='Latest-Item-Previous' onClick={prevSlide}/>\r\n        {memories.map((memory, index) => {\r\n          return (\r\n          <div\r\n            className={index === current ? 'slide active' : 'slide'}\r\n            key={index}\r\n          >\r\n            {index === current && (\r\n                <MemoryItem key={memory.id} memory = {memory}/>\r\n            )}\r\n          </div>\r\n        );\r\n      })}\r\n\r\n        <FaArrowAltCircleRight className='Latest-Item-Next' onClick={nextSlide}/>\r\n        </article>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nexport default Latest;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header.js",["59"],"import { Link, NavLink } from 'react-router-dom';\r\n\r\nconst Header = () => {\r\n\r\n    return (\r\n      <header className=\"NavBar\">\r\n        <h1 className=\"NavBar-Logo\"> <NavLink to=\"/\"> MemoryBook </NavLink></h1>\r\n        <nav className=\"NavBar-Menu\">\r\n            <ul>\r\n                <li>\r\n                <h3> <NavLink to=\"/Latest\">  Latest  </NavLink></h3>\r\n                </li>\r\n                <li>\r\n                <h2><NavLink to=\"/Memories\">  Memories  </NavLink></h2>\r\n                </li>\r\n                <li>\r\n                <h3><NavLink to=\"/Share\">  Share  </NavLink></h3>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n        <ul className=\"NavBar-Account\">\r\n            <li>\r\n                <NavLink to=\"/Profile\"> Profile </NavLink>\r\n            </li>\r\n            <li>\r\n                <NavLink to=\"/SignOut\"> Sign out </NavLink>\r\n            </li>\r\n        </ul>\r\n      </header>\r\n  );\r\n};\r\n  \r\nexport default Header;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share.js",["60","61"],"import { collection, addDoc } from 'firebase/firestore'\r\nimport { db } from '../firebase';\r\nimport MemoryItem from './Items/MemoryItem.js';\r\n\r\nconst Book = () => {\r\n    \r\n\r\n    return (\r\n      <section className=\"Share\">\r\n        <h1> Share Memory </h1>\r\n        <form id=\"Share-Form\">\r\n            <div className=\"container\">\r\n              <label htmlFor=\"leg-title\"> Title </label><br/>\r\n              <input id=\"Share-Form-Title\" type=\"text\" name=\"title\" placeholder=\"Enter memory title...\" /><br/>\r\n\r\n              <label htmlFor=\"category\"> Description </label><br/>\r\n              <textarea id=\"Share-Form-Description\" type=\"text\" name=\"description\" placeholder=\"Enter memory description...\" /><br/>\r\n\r\n              <label htmlFor=\"game-img\">Image URL </label><br/>\r\n              <input id=\"Share-Form-ImageURL\" type=\"text\" name=\"imageUrl\" placeholder=\"Upload a photo...\" onChange={ChangeMemoryPreviewImage}/><br/>\r\n\r\n              <input className=\"btn submit\" type=\"submit\" value=\"Share\" onClick={ShareMemory}/>\r\n            </div>\r\n            <div id=\"MemoryPreviewImage-parent\">\r\n              <img id=\"MemoryPreviewImage\" src=\"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\" alt=\"\"/>\r\n            </div>\r\n        </form>\r\n    </section>\r\n  );\r\n\r\n  \r\n};\r\n\r\nfunction ChangeMemoryPreviewImage(e){\r\n  e.preventDefault();\r\n\r\n  const memoryPreviewImageRef = document.querySelector('#MemoryPreviewImage');\r\n  const imageUrlRef = document.querySelector('#Share-Form-ImageURL');\r\n  \r\n\r\n  fetch(imageUrlRef.value, {\r\n      method: 'HEAD'\r\n   })\r\n   .then(res => {\r\n      if (res.ok) {\r\n         console.log('Image exists.');\r\n         memoryPreviewImageRef.src = imageUrlRef.value\r\n      } else {\r\n         console.log('Image does not exist.');\r\n         memoryPreviewImageRef.src = \"https://merriam-webster.com/assets/mw/images/gallery/gal-home-edpick-lg/empty-speech-bubble-7508-68642ecb0f0a19313dd31c16f67e67e1@1x.jpg\";\r\n      }\r\n   }).catch(err => console.log('Error:', err));\r\n}\r\n\r\nasync function ShareMemory(e){\r\n\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  const titleRef = document.querySelector('#Share-Form-Title');\r\n  const descriptionRef = document.querySelector('#Share-Form-Description');\r\n  const imageUrlRef = document.querySelector('#Share-Form-ImageURL');\r\n\r\n  const monthNames = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\r\n\r\n  const date = new Date();\r\n  const sharedDate = date.getDate() + \" \" + monthNames[date.getMonth()] + \" \" + date.getFullYear();\r\n\r\n  e.preventDefault();\r\n  const docRef = await addDoc(\r\n    memoriesRef, {\r\n      Title: titleRef.value,\r\n      Description: descriptionRef.value,\r\n      Date: sharedDate,\r\n      ImageURL: imageUrlRef.value,\r\n    }\r\n  )\r\n  .then(() =>{\r\n    alert(\"Data added successfully.\");\r\n  })\r\n  .catch((error) => {\r\n    alert(\"Unsuccessful operation, error: \" + error)\r\n  })\r\n}\r\n\r\nexport default Book;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memory.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryDetailsItem.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js",[],{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","severity":1,"message":"67","line":21,"column":6,"nodeType":"68","endLine":21,"endColumn":8,"suggestions":"69"},{"ruleId":"66","severity":1,"message":"67","line":21,"column":6,"nodeType":"68","endLine":21,"endColumn":8,"suggestions":"70"},{"ruleId":"71","severity":1,"message":"72","line":1,"column":10,"nodeType":"73","messageId":"74","endLine":1,"endColumn":14},{"ruleId":"71","severity":1,"message":"75","line":3,"column":8,"nodeType":"73","messageId":"74","endLine":3,"endColumn":18},{"ruleId":"71","severity":1,"message":"76","line":69,"column":9,"nodeType":"73","messageId":"74","endLine":69,"endColumn":15},"no-native-reassign",["77"],"no-negated-in-lhs",["78"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memoriesRef'. Either include it or remove the dependency array.","ArrayExpression",["79"],["80"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'MemoryItem' is defined but never used.","'docRef' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"81","fix":"82"},{"desc":"81","fix":"83"},"Update the dependencies array to be: [memoriesRef]",{"range":"84","text":"85"},{"range":"86","text":"85"},[618,620],"[memoriesRef]",[610,612]]