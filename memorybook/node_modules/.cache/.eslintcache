[{"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js":"1","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js":"2","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js":"3","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js":"4","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js":"5","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\contexts\\AuthContext.js":"6","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Home\\Home.js":"7","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Home\\HomeWelcome.js":"8","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Edit\\Edit.js":"9","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Details\\Memory.js":"10","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Details\\MemoryDetailsItem.js":"11","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header\\Header.js":"12","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer\\Footer.js":"13","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Policy\\Policy.js":"14","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Login\\Login.js":"15","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories\\Memories.js":"16","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Register\\Register.js":"17","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share\\Share.js":"18","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Profile\\Profile.js":"19","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Profile\\ProfileMemoryItem.js":"20"},{"size":572,"mtime":1637590348105,"results":"21","hashOfConfig":"22"},{"size":362,"mtime":499162500000,"results":"23","hashOfConfig":"22"},{"size":2306,"mtime":1638922591409,"results":"24","hashOfConfig":"22"},{"size":529,"mtime":1638626908177,"results":"25","hashOfConfig":"22"},{"size":581,"mtime":1638571812112,"results":"26","hashOfConfig":"22"},{"size":85,"mtime":1638582068494,"results":"27","hashOfConfig":"22"},{"size":1965,"mtime":1638838433625,"results":"28","hashOfConfig":"22"},{"size":692,"mtime":1638587879744,"results":"29","hashOfConfig":"22"},{"size":3075,"mtime":1638929864405,"results":"30","hashOfConfig":"22"},{"size":2754,"mtime":1638930355598,"results":"31","hashOfConfig":"22"},{"size":965,"mtime":1638930622012,"results":"32","hashOfConfig":"22"},{"size":2392,"mtime":1638919758368,"results":"33","hashOfConfig":"22"},{"size":337,"mtime":1638619332338,"results":"34","hashOfConfig":"22"},{"size":85800,"mtime":1638619374226,"results":"35","hashOfConfig":"22"},{"size":2194,"mtime":1638620936326,"results":"36","hashOfConfig":"22"},{"size":1256,"mtime":1638921253300,"results":"37","hashOfConfig":"22"},{"size":6282,"mtime":1638965017095,"results":"38","hashOfConfig":"22"},{"size":4329,"mtime":1638835845841,"results":"39","hashOfConfig":"22"},{"size":2593,"mtime":1638965558091,"results":"40","hashOfConfig":"22"},{"size":570,"mtime":1638964638456,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"17lz8wg",{"filePath":"45","messages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"44"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"44"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"44"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"44"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\index.js",[],["89","90"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\reportWebVitals.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\App.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\firebase.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Items\\MemoryItem.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\contexts\\AuthContext.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Home\\Home.js",["91"],"import { useState, useEffect } from 'react';\r\nimport { FaArrowAltCircleRight, FaArrowAltCircleLeft } from 'react-icons/fa'\r\n\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../../firebase';\r\n\r\nimport MemoryItem from '../Items/MemoryItem';\r\n\r\nimport Welcome from './HomeWelcome';\r\n\r\nconst Home = () => {\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () => {\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })).sort(compareLatest).slice(0, 3));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n  const [current, setCurrent] = useState(0);\r\n  const length = memories.length;\r\n\r\n  const nextSlide = () => {\r\n    setCurrent(current === length - 1 ? 0 : current + 1);\r\n  };\r\n\r\n  const prevSlide = () => {\r\n    setCurrent(current === 0 ? length - 1 : current - 1);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Welcome />\r\n      <section className=\"Home\">\r\n        <h1> Most Liked Memories </h1>\r\n        {length > 0\r\n          ? <article className=\"Home-Slider\">\r\n            <FaArrowAltCircleLeft className='Home-Item-Previous' onClick={prevSlide} />\r\n            {memories.map((memory, index) => {\r\n              return (\r\n                <div\r\n                  className={index === current ? 'slide active' : 'slide'}\r\n                  key={index}\r\n                >\r\n                  {index === current && (\r\n                    <MemoryItem key={memory.id} memory={memory} />\r\n                  )}\r\n                </div>\r\n              );\r\n            })}\r\n            <FaArrowAltCircleRight className='Home-Item-Next' onClick={nextSlide} />\r\n          </article>\r\n          : <p> Searching for memories... </p>\r\n        }\r\n      </section>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n\r\nconst compareLatest = (a, b) => {\r\n  return b.Likes.length - a.Likes.length;\r\n};\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Home\\HomeWelcome.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Edit\\Edit.js",["92"],"import { useState, useEffect, useContext } from 'react';\r\n\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\n\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { db } from '../../firebase';\r\nimport { updateDoc, doc, getDoc } from 'firebase/firestore'\r\n\r\nconst Edit = () => {\r\n    const navigate = useNavigate();\r\n\r\n    const { user } = useContext(AuthContext);\r\n\r\n    if (user === null) {\r\n        navigate(\"/Login\");\r\n    }\r\n\r\n    const { memoryId } = useParams();\r\n\r\n    const [memory, setMemory] = useState({});\r\n\r\n\r\n    const [invalidTitle, setInvalidTitle] = useState(false);\r\n    const [invalidDescription, setInvalidDescription] = useState(false);\r\n\r\n    useEffect(() => {\r\n        const getMemory = async () => {\r\n            const docRef = doc(db, \"Memories\", memoryId);\r\n            const docSnap = await getDoc(docRef);\r\n            setMemory(docSnap.data());\r\n\r\n            if (user.uid === memory.OwnerId) {\r\n                navigate(\"/Memories\")\r\n            }\r\n        }\r\n        getMemory();\r\n    }, [memoryId]);\r\n\r\n    const onEditHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        setInvalidTitle(false);\r\n        setInvalidDescription(false);\r\n\r\n        let formData = new FormData(e.currentTarget);\r\n        let { title, description } = Object.fromEntries(formData)\r\n\r\n\r\n        if (title.length === '' || title.length > 32) {\r\n            setInvalidTitle(true);\r\n            return;\r\n        }\r\n        if (description.length > 150) {\r\n            setInvalidDescription(true);\r\n            return;\r\n        }\r\n\r\n        const memoryRef = doc(db, \"Memories\", memoryId);\r\n\r\n        await updateDoc(memoryRef, {\r\n            Title: title,\r\n            Description: description\r\n        });\r\n\r\n        navigate('/Memories')\r\n    };\r\n\r\n    return (\r\n        <section className=\"Edit\">\r\n            <h1> Edit Memory </h1>\r\n            <form id=\"Edit-Form\" onSubmit={onEditHandler}>\r\n                <div className=\"container\">\r\n                    {invalidTitle ? <p className=\"InvalidField\"> Title must be 1-32 characters long </p> : <></>}\r\n                    {invalidDescription ? <p className=\"InvalidField\"> Description must be maximum of 150 characters long </p> : <></>}\r\n                    \r\n                    <label htmlFor=\"leg-title\"> Title </label><br />\r\n                    <input id=\"Edit-Form-Title\" type=\"text\" name=\"title\" placeholder=\"Enter memory title...\" defaultValue={memory.Title} /><br />\r\n\r\n                    <label htmlFor=\"category\"> Description </label><br />\r\n                    <textarea id=\"Edit-Form-Description\" type=\"text\" name=\"description\" placeholder=\"Enter memory description...\" defaultValue={memory.Description} /><br />\r\n\r\n                    <input className=\"btn submit\" type=\"submit\" value=\"Save\" />\r\n                </div>\r\n                <div id=\"MemoryPreviewImage-parent\">\r\n                    <img id=\"MemoryPreviewImage\" src={memory.ImageURL} alt=\"\" />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Edit;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Details\\Memory.js",["93"],"import { useState, useEffect, useContext } from 'react';\r\nimport { useParams, Link, useNavigate } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\n\r\nimport { db } from '../../firebase';\r\nimport { getDoc, setDoc, doc, deleteDoc } from 'firebase/firestore'\r\nimport MemoryDetailsItem from './MemoryDetailsItem.js';\r\n\r\n\r\n\r\nconst Memory = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const { user } = useContext(AuthContext);\r\n\r\n  if (user === null) {\r\n    navigate(\"/Login\");\r\n  }\r\n\r\n  const { memoryId } = useParams();\r\n\r\n  const [memory, setMemory] = useState({});\r\n  const [likes, setLikes] = useState(0);\r\n\r\n  const [name, setName] = useState('...Loading')\r\n\r\n  useEffect(() => {\r\n    const getMemory = async () => {\r\n      const docRef = doc(db, \"Memories\", memoryId);\r\n      const docSnap = await getDoc(docRef);\r\n      setMemory(docSnap.data());\r\n      setLikes(docSnap.data().Likes.length)\r\n      getName(docSnap.data().OwnerId);\r\n    }\r\n\r\n    getMemory();\r\n  }, [memoryId]);\r\n\r\n  const getName = async (ownerId) => {\r\n    const docRef = doc(db, \"Users\", ownerId);\r\n    const docSnap = await getDoc(docRef);\r\n    setName(docSnap.data().DisplayName);\r\n\r\n  }\r\n\r\n  const onLikeHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const memoryRef = doc(db, 'Memories', memoryId);\r\n    const docSnap = await getDoc(memoryRef);\r\n\r\n    const _Likes = docSnap.data().Likes;\r\n\r\n    if (_Likes.includes(user.uid)) {\r\n      var index = _Likes.indexOf(user.uid);\r\n\r\n      if (index !== -1) {\r\n        _Likes.splice(index, 1);\r\n      }\r\n    }\r\n    else {\r\n      _Likes.push(user.uid);\r\n    }\r\n\r\n    await setDoc(\r\n      memoryRef, {\r\n      Likes: _Likes\r\n    }, { merge: true })\r\n      .then(() => {\r\n        setLikes(_Likes.length);\r\n      })\r\n      .catch((error) => {\r\n        alert(\"Unsuccessful operation, error: \" + error)\r\n      });\r\n  }\r\n\r\n  const onEditHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    navigate(`/memory/edit/${memoryId}`);\r\n  }\r\n\r\n  const onDeleteHandler = async (e) => {\r\n    e.preventDefault();\r\n\r\n    await deleteDoc(doc(db, \"Memories\", memoryId));\r\n\r\n    navigate(\"/Memories\");\r\n  }\r\n\r\n  return (\r\n    <section>\r\n      <article>\r\n        <MemoryDetailsItem key={memoryId} memory={memory} name={name} />\r\n      </article>\r\n      <article className=\"Memory-Interactions\">\r\n        <button onClick={onLikeHandler}> {memory.Likes !== undefined ? likes : 0}  Like </button>\r\n        {user.uid === memory.OwnerId\r\n          ?\r\n          <>\r\n            <button onClick={onEditHandler}> Edit </button>\r\n            <button onClick={onDeleteHandler}> Delete </button>\r\n          </>\r\n          : <></>\r\n        }\r\n      </article>\r\n    </section>\r\n\r\n  );\r\n};\r\n\r\n\r\nexport default Memory;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Details\\MemoryDetailsItem.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Header\\Header.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Footer\\Footer.js",["94"],"import { NavLink, useNavigate } from 'react-router-dom';\r\n\r\nfunction Footer() {\r\n\r\n    return (\r\n        <footer className=\"Footer\">\r\n            <p>Copyright © 2021 MemoryBook. All Rights Reserved. <NavLink to=\"Privacy-Policy\">Privacy Policy</NavLink></p>\r\n            \r\n        </footer>\r\n    );\r\n  }\r\n  \r\n  export default Footer;\r\n  ","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Policy\\Policy.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Login\\Login.js",["95","96"],"import { useState, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom'\r\n\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\n\r\nimport { getAuth ,signInWithEmailAndPassword } from \"firebase/auth\";\r\n\r\n\r\nconst Login = () => {\r\n    const navigate = useNavigate();\r\n  \r\n    const {user} = useContext(AuthContext);\r\n    \r\n    if (user !== null) {\r\n        navigate(\"/Memories\");\r\n    }\r\n\r\n    const [invalidCredentials, setInvalidCredentials] = useState(false);\r\n\r\n    const onLoginHandler = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let formData = new FormData(e.currentTarget);\r\n        let { email, password } = Object.fromEntries(formData)\r\n\r\n        const auth = getAuth();\r\n\r\n        signInWithEmailAndPassword(auth, email, password)\r\n            .then((userCredential) => {\r\n                const user = userCredential.user;\r\n                //navigate(\"/Memories\");\r\n            })\r\n            .catch((error) => {\r\n                const errorCode = error.code;\r\n                const errorMessage = error.message;\r\n\r\n                console.log(errorCode);\r\n\r\n                if (errorCode === \"auth/invalid-email\" || errorCode === \"auth/wrong-password\") {\r\n                    setInvalidCredentials(true);\r\n                }\r\n            });\r\n    };\r\n\r\n    return (\r\n        <section className=\"Login\">\r\n            <h1> Login User </h1>\r\n            <form id=\"Login-Form\" onSubmit={onLoginHandler}>\r\n                <div className=\"container\"\r\n                >\r\n                    {invalidCredentials ? <p className=\"InvalidField\"> Invalid Credentials</p> : <></>}\r\n\r\n                    <label htmlFor=\"leg-title\"> E-mail </label><br />\r\n                    <input id=\"Login-Form-Email\" type=\"text\" name=\"email\" placeholder=\"Enter e-mail...\" /><br />\r\n\r\n                    <label htmlFor=\"category\"> Password </label><br />\r\n                    <input id=\"Login-Form-Password\" type=\"password\" name=\"password\" placeholder=\"Enter password...\" /><br />\r\n\r\n                    <input className=\"btn submit\" type=\"submit\" value=\"Login\" />\r\n                </div>\r\n            </form>\r\n        </section>\r\n    );\r\n\r\n\r\n};\r\n\r\nexport default Login;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Memories\\Memories.js",["97"],"import { useState, useEffect, useContext } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nimport { AuthContext } from '../../contexts/AuthContext';\r\n\r\nimport { collection, getDocs } from 'firebase/firestore'\r\nimport { db } from '../../firebase';\r\n\r\nimport MemoryItem from '../Items/MemoryItem.js';\r\n\r\n\r\n\r\nconst Memories = () => {\r\n  const navigate = useNavigate();\r\n\r\n  const {user} = useContext(AuthContext);\r\n\r\n  if (user === null) {\r\n    navigate(\"/Login\");\r\n  }\r\n\r\n  const [memories, setMemories] = useState([]);\r\n  const memoriesRef = collection(db, \"Memories\");\r\n\r\n  useEffect(() => {\r\n    const getMemories = async () => {\r\n      const data = await getDocs(memoriesRef);\r\n      setMemories(data.docs.map((doc) => ({ ...doc.data(), id: doc.id })));\r\n    }\r\n\r\n    getMemories();\r\n  }, []);\r\n\r\n  const length = memories.length;\r\n\r\n  return (\r\n    <section className=\"Memories\">\r\n      <h1> Memories </h1>\r\n      {length > 0\r\n        ? <article>\r\n          {memories.map((memory) => {\r\n            return (\r\n              <MemoryItem key={memory.id} memory={memory} />\r\n            );\r\n          })}\r\n        </article>\r\n        : <p> Searching for memories... </p>\r\n      }\r\n    </section>\r\n  );\r\n\r\n\r\n};\r\n\r\nexport default Memories;\r\n","C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Register\\Register.js",["98","99"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Share\\Share.js",[],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Profile\\Profile.js",["100"],"C:\\Users\\Ivan Petrov\\Desktop\\React-MemoryBook\\memorybook\\src\\components\\Profile\\ProfileMemoryItem.js",[],{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","replacedBy":"104"},{"ruleId":"105","severity":1,"message":"106","line":22,"column":6,"nodeType":"107","endLine":22,"endColumn":8,"suggestions":"108"},{"ruleId":"105","severity":1,"message":"109","line":37,"column":8,"nodeType":"107","endLine":37,"endColumn":18,"suggestions":"110"},{"ruleId":"111","severity":1,"message":"112","line":2,"column":21,"nodeType":"113","messageId":"114","endLine":2,"endColumn":25},{"ruleId":"111","severity":1,"message":"115","line":1,"column":19,"nodeType":"113","messageId":"114","endLine":1,"endColumn":30},{"ruleId":"111","severity":1,"message":"116","line":30,"column":23,"nodeType":"113","messageId":"114","endLine":30,"endColumn":27},{"ruleId":"111","severity":1,"message":"117","line":35,"column":23,"nodeType":"113","messageId":"114","endLine":35,"endColumn":35},{"ruleId":"105","severity":1,"message":"106","line":32,"column":6,"nodeType":"107","endLine":32,"endColumn":8,"suggestions":"118"},{"ruleId":"111","severity":1,"message":"119","line":8,"column":10,"nodeType":"113","messageId":"114","endLine":8,"endColumn":20},{"ruleId":"111","severity":1,"message":"120","line":8,"column":22,"nodeType":"113","messageId":"114","endLine":8,"endColumn":28},{"ruleId":"105","severity":1,"message":"106","line":50,"column":8,"nodeType":"107","endLine":50,"endColumn":10,"suggestions":"121"},"no-native-reassign",["122"],"no-negated-in-lhs",["123"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'memoriesRef'. Either include it or remove the dependency array.","ArrayExpression",["124"],"React Hook useEffect has missing dependencies: 'memory.OwnerId', 'navigate', and 'user.uid'. Either include them or remove the dependency array.",["125"],"no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'useNavigate' is defined but never used.","'user' is assigned a value but never used.","'errorMessage' is assigned a value but never used.",["126"],"'collection' is defined but never used.","'addDoc' is defined but never used.",["127"],"no-global-assign","no-unsafe-negation",{"desc":"128","fix":"129"},{"desc":"130","fix":"131"},{"desc":"128","fix":"132"},{"desc":"128","fix":"133"},"Update the dependencies array to be: [memoriesRef]",{"range":"134","text":"135"},"Update the dependencies array to be: [memory.OwnerId, memoryId, navigate, user.uid]",{"range":"136","text":"137"},{"range":"138","text":"135"},{"range":"139","text":"135"},[688,690],"[memoriesRef]",[1044,1054],"[memory.OwnerId, memoryId, navigate, user.uid]",[809,811],[1375,1377]]